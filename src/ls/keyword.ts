import { NSDatabase } from "@sqltools/types";

const keywordsArray = 
[
  'create',
  'alter',
  'drop',
  'insert into',
  'update',
  'delete',
  'select',
  'exec',
  'where',
  'group by',
  'context by',
  'pivot by',
  'order by',
  'top',
  'limit',
  'case',
  'cgroup by',
  'distinct',
  'having',
  'interval',
  'map',
  'partition',
  'sample',
  'sum',
  'sum2',
  'avg',
  'std',
  'stdp',
  'var',
  'varp',
  'count',
  'min',
  'imin',
  'iminLat',
  'max',
  'imax',
  'imaxLast',
  'skew',
  'kurtosis',
  'med',
  'row_number',
  'rank',
  'dense_rank',
  'percent_rank',
  'cume_dist',
  'lead',
  'lag',
  'ntle',
  'first_value',
  'last_value',
  "nth_value",
  'firstNot',
  'lastNot',
  'prod',
  'percentile',
  'wavg',
  'wsum',
  'corr',
  'covar',
  'beta',
  'atlmax',
  'atlmin',
  'coalesce',
  'any',
  'all',
  'nullIf',
  'union',
  'union all',
  'with',
  'between',
  'exists',
  'is null',
  'in',
  'like',
  'LIKE',
  'asof join',
  'cross join',
  'equi join',
  'full join',
  'full outer join',
  'inner join',
  'join',
  'left join',
  'left outer join',
  'prefix join',
  'right join',
  'right outer join',
  'window join',
  'getTraces',
  'setTraceMode',
  'viewTraceInfo',
  'measurement',
  'explain',
  'vectorindex',
  'optimize',
  'merge',
  'reduce',
  'groupBy',
  'contextBy'
];
//函数需要完成实现
const keywordsCompletion: { [w: string]: NSDatabase.IStaticCompletion } = keywordsArray.reduce((agg, word) => {
    agg[word] = {
      label: word,
      detail: word,
      filterText: word,
      sortText: (['SELECT', 'CREATE', 'UPDATE', 'DELETE'].includes(word) ? '2:' : '') + word,
      documentation: {
        value: `\`\`\`yaml\nWORD: ${word}\n\`\`\``,
        kind: 'markdown'
      }
    };
    return agg;
  }, {});
  
  export default keywordsCompletion;
